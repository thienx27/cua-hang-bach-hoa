package GUI;

import Entity.*;
import DAO.*;
import java.util.*;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Dell
 */
public class Logindemo extends javax.swing.JInternalFrame {
   String matkhau;
    String tendangnhap;
    String chucnang;
    /**
     * Creates new form FrmDangnhap
     */
   

    public Logindemo() {
        initComponents();
         setLocation(null);
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_DangNhap = new javax.swing.JButton();
        btn_Cancle = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_Username = new javax.swing.JTextField();
        txt_Password = new javax.swing.JPasswordField();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        btn_DangNhap.setText("Đăng nhập");
        btn_DangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DangNhapActionPerformed(evt);
            }
        });

        btn_Cancle.setText("Cancle");
        btn_Cancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancleActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Đăng nhập");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Tên đăng nhập");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("Mật khẩu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(btn_DangNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Cancle))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_Username)
                                    .addComponent(txt_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jLabel1)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_DangNhap)
                    .addComponent(btn_Cancle))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_DangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DangNhapActionPerformed
  try {
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection con=DriverManager.getConnection("jdbc:sqlserver://127.0.0.1:1433;databaseName=QuanLyBanHang","sa","123");
             String sql="select *from USERS where tentaikhoan=? and matkhau=?";
             PreparedStatement pst=con.prepareStatement(sql);
             pst.setString(1, txt_Username.getText());
              pst.setString(2, txt_Password.getText());
              ResultSet rs=pst.executeQuery();
              if (rs.next()) {
                JOptionPane.showMessageDialog(null,"Đăng nhập thành công");
                FrmMain menu= new FrmMain();
                menu.setVisible(true);
                  setVisible(false);
            } else {
                   JOptionPane.showMessageDialog(null,"Đăng nhập thất bại");
                   txt_Username.setText("");
                   txt_Password.setText("");
                   
            }con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
                            
//        if (kiemtradulieu()) {
//            new FrmMain(chucnang, txt_Username.getText()).setVisible(true);
//            setVisible(false);
//            dispose();
//        }

    }//GEN-LAST:event_btn_DangNhapActionPerformed

    private void btn_CancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancleActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Bạn muốn đóng ứng dụng này ?", "Xác nhận đóng",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
            System.exit(0);
        }// TODO add your handling code here:
    }//GEN-LAST:event_btn_CancleActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
//        try {
//            con.close();
//            JOptionPane.showMessageDialog(null, "Da dong ket noi");
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

    }//GEN-LAST:event_formInternalFrameClosing
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDangNhap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cancle;
    private javax.swing.JButton btn_DangNhap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField txt_Password;
    private javax.swing.JTextField txt_Username;
    // End of variables declaration//GEN-END:variables
// public boolean kiemtradulieu() {
//        if (txt_Username.getText().isEmpty()) {
//
//            JOptionPane.showMessageDialog(null, "Xin mời nhập tên tài khoản ", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//            return false;
//        } else if (txt_Username.getText().length() > 20 || txt_Username.getText().length() < 0) {
//
//            JOptionPane.showMessageDialog(null, " Tên tài khoản chỉ nhập từ 1 đến 20 ký tự", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//            return false;
//
//        } else if (!txt_Username.getText().matches("[0-9a-zA-Z]+")) {
//
//            JOptionPane.showMessageDialog(null, "Sai định dạng Tài khoản", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//            return false;
//        }
//        matkhau = new String(txt_Password.getPassword());
//        tendangnhap = txt_Username.getText();
//        if (matkhau.isEmpty()) {
//
//            JOptionPane.showMessageDialog(null, "Xin mời nhập Mật khẩu ", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//            return false;
//        } else if (matkhau.length() > 20 || matkhau.length() < 1) {
//
//            JOptionPane.showMessageDialog(null, "mật khẩu chỉ nhập từ 1 đến 20 ký tự ", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//            return false;
//        } else if (!matkhau.matches("[0-9a-zA-Z]+")) {
//
//            JOptionPane.showMessageDialog(null, " Sai định dạng Mật khẩu", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//            return false;
//        }
//
//        Users tk =DangNhapDao.timkiemTaiKhoan(tendangnhap);
//
//        if (tk != null) {
//            if (!matkhau.equals(tk.getMatkhau())) {
//                JOptionPane.showMessageDialog(null, "Sai Mật Khẩu ", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//                return false;
//            }
//
//        } else {
//            JOptionPane.showMessageDialog(null, "Sai tên Tài Khoản ", "Thông báo!", JOptionPane.ERROR_MESSAGE);
//            return false;
//        }
//        chucnang = (String) tk.getChucnang();
//        if (tk.getChucnang().equals("Quản lý")) {
//            JOptionPane.showMessageDialog(rootPane, "Đăng Nhập Thành Công "
//                    + "\n Xin chào Quản Lý : " + tk.getTentaikhoan());
//        } else {
//            if (tk.getChucnang().equals("Thu ngân")) {
//                JOptionPane.showMessageDialog(rootPane, "Đăng Nhập Thành Công  "
//                        + "\n Xin chào Thu Ngân : " + tk.getTentaikhoan());
//            }
//        }
//
//        return true;
//    }
}
