/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.DangNhapDao;
import DAO.NhanVienDao;
import Entity.Users;
import Entity.Nhanvien;
import java.awt.Image;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QuanLyNhanVien extends javax.swing.JInternalFrame implements internhanvien {

    /**
     * Creates new form QuanLyNhanVien
     */
    JFileChooser c = new JFileChooser();
    List<Nhanvien> list;
    DefaultTableModel model;
    int index;
    String imganh;

    public QuanLyNhanVien() {
        initComponents();
        this.loadtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_timkiem = new javax.swing.JButton();
        txt_manhanvien1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_nhanvien = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_hovaten = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        rdo_nam = new javax.swing.JRadioButton();
        rdo_nu = new javax.swing.JRadioButton();
        txt_email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbo_chucvu = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_diachi = new javax.swing.JTextArea();
        txt_Luong = new javax.swing.JTextField();
        txt_ngaysinh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_themmoi = new javax.swing.JButton();
        btn_lammoi = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txt_manhanvien2 = new javax.swing.JTextField();
        btn_sua = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_sdt1 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Quản lý  nhân viên");

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(510, 20, 460, 45);

        btn_timkiem.setBackground(new java.awt.Color(255, 255, 255));
        btn_timkiem.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btn_timkiem.setForeground(new java.awt.Color(51, 102, 0));
        btn_timkiem.setText("Tìm kiếm");
        btn_timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timkiemActionPerformed(evt);
            }
        });
        jPanel1.add(btn_timkiem);
        btn_timkiem.setBounds(320, 70, 190, 60);

        txt_manhanvien1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txt_manhanvien1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_manhanvien1ActionPerformed(evt);
            }
        });
        jPanel1.add(txt_manhanvien1);
        txt_manhanvien1.setBounds(540, 80, 470, 45);

        tbl_nhanvien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tbl_nhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ và tên", "Giới tính", "Ngày sinh", "Số điện thoại", "Email", "Đại chỉ", "Chức năng", "Lương"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_nhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_nhanvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_nhanvien);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 152, 1110, 180);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("Mã nhân viên:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(33, 350, 150, 45);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 51));
        jLabel3.setText("Họ và tên:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(33, 410, 130, 45);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 51));
        jLabel4.setText("Giớii tính:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(33, 470, 130, 45);

        txt_hovaten.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_hovaten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hovatenActionPerformed(evt);
            }
        });
        jPanel1.add(txt_hovaten);
        txt_hovaten.setBounds(200, 410, 248, 45);

        buttonGroup1.add(rdo_nam);
        rdo_nam.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        rdo_nam.setSelected(true);
        rdo_nam.setText("Nam");
        rdo_nam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_namActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdo_nu);
        rdo_nu.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        rdo_nu.setText("Nữ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdo_nam, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdo_nu, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdo_nam)
                    .addComponent(rdo_nu)))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(200, 470, 248, 45);

        txt_email.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txt_email);
        txt_email.setBounds(660, 350, 250, 45);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("Email:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(518, 350, 110, 45);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 0, 51));
        jLabel9.setText("Chức vụ:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(518, 420, 110, 45);

        cbo_chucvu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbo_chucvu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý cửa hàng", "Nhân viên kho", "Nhân viên thu ngân" }));
        jPanel1.add(cbo_chucvu);
        cbo_chucvu.setBounds(660, 420, 340, 45);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 51));
        jLabel8.setText("Địa chỉ:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(520, 590, 110, 45);

        txt_diachi.setColumns(20);
        txt_diachi.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txt_diachi.setRows(5);
        jScrollPane2.setViewportView(txt_diachi);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(660, 480, 470, 90);

        txt_Luong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txt_Luong);
        txt_Luong.setBounds(660, 590, 280, 45);

        txt_ngaysinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txt_ngaysinh);
        txt_ngaysinh.setBounds(200, 530, 248, 45);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 51));
        jLabel5.setText("Ngày sinh:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(32, 520, 140, 45);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setText("Số điện thoại:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(33, 590, 150, 45);

        btn_themmoi.setBackground(new java.awt.Color(255, 255, 255));
        btn_themmoi.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btn_themmoi.setForeground(new java.awt.Color(0, 102, 102));
        btn_themmoi.setText("Thêm mới");
        btn_themmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themmoiActionPerformed(evt);
            }
        });
        jPanel1.add(btn_themmoi);
        btn_themmoi.setBounds(50, 660, 200, 45);

        btn_lammoi.setBackground(new java.awt.Color(255, 255, 255));
        btn_lammoi.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btn_lammoi.setForeground(new java.awt.Color(0, 102, 102));
        btn_lammoi.setText("Làm mới");
        btn_lammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lammoiActionPerformed(evt);
            }
        });
        jPanel1.add(btn_lammoi);
        btn_lammoi.setBounds(250, 660, 200, 45);

        btn_xoa.setBackground(new java.awt.Color(255, 255, 255));
        btn_xoa.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btn_xoa.setForeground(new java.awt.Color(0, 102, 102));
        btn_xoa.setText("Xóa");
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });
        jPanel1.add(btn_xoa);
        btn_xoa.setBounds(455, 660, 200, 45);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 102, 102));
        jButton6.setText("Sửa");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(650, 660, 200, 45);

        txt_manhanvien2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_manhanvien2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_manhanvien2ActionPerformed(evt);
            }
        });
        jPanel1.add(txt_manhanvien2);
        txt_manhanvien2.setBounds(200, 350, 248, 45);

        btn_sua.setBackground(new java.awt.Color(255, 255, 255));
        btn_sua.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btn_sua.setForeground(new java.awt.Color(0, 102, 102));
        btn_sua.setText("Thoát");
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });
        jPanel1.add(btn_sua);
        btn_sua.setBounds(850, 660, 200, 45);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(jLabel10);
        jLabel10.setBounds(-10, -30, 1180, 750);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 0, 51));
        jLabel11.setText("Địa chỉ:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(520, 500, 110, 45);

        txt_sdt1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txt_sdt1);
        txt_sdt1.setBounds(200, 590, 248, 45);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1162, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_manhanvien1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_manhanvien1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_manhanvien1ActionPerformed

    private void txt_hovatenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hovatenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hovatenActionPerformed

    private void rdo_namActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_namActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdo_namActionPerformed

    private void txt_manhanvien2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_manhanvien2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_manhanvien2ActionPerformed

    private void btn_timkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timkiemActionPerformed
        // TODO add your handling code here:

        this.timkiemnhanvien();


    }//GEN-LAST:event_btn_timkiemActionPerformed

    private void btn_themmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themmoiActionPerformed
        // TODO add your handling code here:
        this.them();

    }//GEN-LAST:event_btn_themmoiActionPerformed

    private void btn_lammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lammoiActionPerformed
        // TODO add your handling code here:

        this.lammoi();
        this.timkiemnhanvien();
    }//GEN-LAST:event_btn_lammoiActionPerformed

    private void tbl_nhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_nhanvienMouseClicked
        // TODO add your handling code here:
        index = tbl_nhanvien.getSelectedRow();

        this.showdetail(index);
    }//GEN-LAST:event_tbl_nhanvienMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.capnhat();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
        // TODO add your handling code here:
        this.xoa();
    }//GEN-LAST:event_btn_xoaActionPerformed

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        // TODO add your handling code here:
          setVisible(false);
    }//GEN-LAST:event_btn_suaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_lammoi;
    private javax.swing.JButton btn_sua;
    private javax.swing.JButton btn_themmoi;
    private javax.swing.JButton btn_timkiem;
    private javax.swing.JButton btn_xoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbo_chucvu;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdo_nam;
    private javax.swing.JRadioButton rdo_nu;
    private javax.swing.JTable tbl_nhanvien;
    private javax.swing.JTextField txt_Luong;
    private javax.swing.JTextArea txt_diachi;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_hovaten;
    private javax.swing.JTextField txt_manhanvien1;
    private javax.swing.JTextField txt_manhanvien2;
    private javax.swing.JTextField txt_ngaysinh;
    private javax.swing.JTextField txt_sdt1;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean checkdulieu() {
        if (txt_manhanvien2.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Mã Nhân viên không để trống ", "Thông báo!", JOptionPane.ERROR_MESSAGE);

            return false;
        } else if (txt_manhanvien2.getText().length() > 30) {
            JOptionPane.showMessageDialog(null, " Mã Nhân viên chỉ nhập dưới 50 ký tự ", "Thông báo!", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txt_hovaten.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Họ tên không để trống", "Thông báo!", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (txt_hovaten.getText().length() > 50) {
            JOptionPane.showMessageDialog(null, "Họ tên chỉ nhập dưới 50 ký tự", "Thông báo!", JOptionPane.ERROR_MESSAGE);
            return false;

        }
        if (txt_ngaysinh.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ngày sinh không được để trống", "Thông báo!", JOptionPane.ERROR_MESSAGE);

            return false;
        } else {
            SimpleDateFormat dinhdang = new SimpleDateFormat("yyyy-MM-dd");
            dinhdang.setLenient(false);
            try {
                dinhdang.parse(txt_ngaysinh.getText());

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Sai định dạng ngày sinh 'yyyy-MM-dd' ", "Thông báo!", JOptionPane.ERROR_MESSAGE);

                System.out.println(e);
                return false;

            }

        }

        if (txt_sdt1.getText().isEmpty()) {
               JOptionPane.showMessageDialog(null, "Xin mời nhập số điện thoại" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
            
            return false;
        } else if (!txt_sdt1.getText().matches("0[0-9]{9,10}")) {
             JOptionPane.showMessageDialog(null, "Sai định dạng số điện thoại" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (txt_email.getText().isEmpty()) {
                   JOptionPane.showMessageDialog(null, "Xin mời nhập Email" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
          
            return false;
        } else if (!txt_email.getText().matches("\\w+@\\w+(\\.\\w+){1,2}")) {
                   JOptionPane.showMessageDialog(null, "Sai định dang Email" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
       
            return false;

        }

        if (txt_diachi.getText().isEmpty()) {
                   JOptionPane.showMessageDialog(null, "Xin mời nhập địa chỉ" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
        }

       
        if (txt_Luong.getText().isEmpty()) {
               JOptionPane.showMessageDialog(null, "Xin mời Lương" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
            
            return false;
        } else if (!txt_Luong.getText().matches("0[0-9]{9,10}")) {
             JOptionPane.showMessageDialog(null, "Sai định dạng Lương" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
            return false;
        } 
        return true;
    }
 
    @Override
    public boolean checktrung() {
        Nhanvien nv = NhanVienDao.timkiemNhanVien(txt_manhanvien2.getText());
        if (nv != null) {
                 JOptionPane.showMessageDialog(null, "Trùng mã nhân viên" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;

    }

    @Override
    public void loadtable() {
        model = (DefaultTableModel) tbl_nhanvien.getModel();
        model.setRowCount(0);
        list = NhanVienDao.danhsachNhanVien("");
        for (Nhanvien nv : list) {
            String gt;
            if (nv.getGioitinh()== true) {
                gt = "Nam";
            } else {
                gt = "Nu";
            }
            Object[] a = new Object[]{
                nv.getMaNhanVien(), nv.getTenNhanVien(), gt, nv.getNgaySinh(), nv.getSoDienThoai(), nv.getEmail(), nv.getDiaChi(), nv.getChucVu()
            };

            model.addRow(a);

        }

    }

    @Override
    public void them() {
        if (checkdulieu() && checktrung()) {
            try {
                boolean gt;
                String t;
                if (rdo_nam.isSelected()) {
                    gt = true;
                    t = "Nam";
                } else {
                    gt = false;
                    t = "Nữ";
                }
                Date ngaysinh = new SimpleDateFormat("yyyy-dd-MM").parse(txt_ngaysinh.getText());
                Nhanvien nv = new Nhanvien(txt_manhanvien2.getText(), txt_hovaten.getText(), gt, ngaysinh, txt_Luong.getText(), txt_email.getText(), txt_diachi.getText(), cbo_chucvu.getSelectedItem().toString(), imganh);
                boolean themnv = NhanVienDao.themnhanvien(nv);
                if (themnv = false) {
                           JOptionPane.showMessageDialog(null, "Lỗi thêm nhân viên vào CSDL" , "Thông báo!", JOptionPane.ERROR_MESSAGE);
                  

                } else {
                    Vector thembang = new Vector();
                    thembang.add(nv.getMaNhanVien());
                    thembang.add(nv.getTenNhanVien());
                    thembang.add(t);
                    thembang.add(new SimpleDateFormat("yyyy-dd-MM").format(nv.getNgaySinh()));
                    thembang.add(nv.getSoDienThoai());
                    thembang.add(nv.getEmail());
                    thembang.add(nv.getDiaChi());
                    thembang.add(nv.getChucVu());
                    thembang.add(nv.getLuong());
                    model.addRow(thembang);
       JOptionPane.showMessageDialog(null, "Thêm thành công nhân viên : " + txt_hovaten.getText() , "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
                   
                    if (nv.getChucVu().equals("Quản lý") || nv.getChucVu().equals("Thu ngân")) {
                        if (checktaikhoan()) {
                            Users dn = new Users(nv.getMaNhanVien(), "123456", nv.getChucVu());
                            if (DangNhapDao.themTaikhoan(dn)) {
                                JOptionPane.showMessageDialog(rootPane, "Tài khoản của nhân viên : " + nv.getTenNhanVien() + "\n Tên đăng nhập : "
                                        + dn.getTentaikhoan() + "\n Mật Khẩu : " + dn.getMatkhau() + "\n Chức năng : " + dn.getChucnang());
                            } else {
                                 JOptionPane.showMessageDialog(null, "Lỗi thêm tài khoản"  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
                              
                            }

                        }
                    }
                }

            } catch (Exception ex) {
              JOptionPane.showMessageDialog(null, "Lỗi thêm nhân viên "+ex , "Thông báo!", JOptionPane.ERROR_MESSAGE);
            }

        }
    }

    @Override
    public void capnhat() {
        if (checkdulieu() && checktontai()) {
            index = tbl_nhanvien.getSelectedRow();
            if (index < 0) {
        JOptionPane.showMessageDialog(null, "Xin mời chọn vị trí cập nhật"  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                try {
                    boolean gt;
                    String t;
                    if (rdo_nam.isSelected()) {
                        gt = true;
                        t = "Nam";
                    } else {
                        gt = false;
                        t = "Nữ";
                    }
                    Date ngaysinh = new SimpleDateFormat("yyyy-dd-MM").parse(txt_ngaysinh.getText());
                    Nhanvien nv = new Nhanvien(txt_manhanvien2.getText(), txt_hovaten.getText(), gt, ngaysinh, txt_Luong.getText(), txt_email.getText(), txt_diachi.getText(), cbo_chucvu.getSelectedItem().toString(), imganh);
                    boolean capnhat = NhanVienDao.capnhatNhanVien(nv);
                    if (capnhat) {
                        model.setValueAt(txt_manhanvien2.getText(), index, 0);
                        model.setValueAt(txt_hovaten.getText(), index, 1);
                        model.setValueAt(t, index, 2);
                        model.setValueAt(txt_ngaysinh.getText(), index, 3);
                        model.setValueAt(txt_Luong.getText(), index, 4);
                        model.setValueAt(txt_email.getText(), index, 5);
                        model.setValueAt(txt_diachi.getText(), index, 6);
                        model.setValueAt(cbo_chucvu.getSelectedItem().toString(), index, 7);
                        model.setValueAt(txt_Luong.getText().toString(), index, 8);
                         JOptionPane.showMessageDialog(null, "Cập nhật thành công nhân viên Mã :"+txt_manhanvien2.getText()  , "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
                        
                        if (nv.getChucVu().equals("Quản lý") || nv.getChucVu().equals("Thu ngân")) {
                            if (checktaikhoan()) {
                                Users dn = new Users(nv.getMaNhanVien(), "123456", nv.getChucVu());
                                if (DangNhapDao.themTaikhoan(dn)) {
                                    JOptionPane.showMessageDialog(rootPane, "Tài khoản của nhân viên : " + nv.getTenNhanVien()+ "\n Tên đăng nhập : "
                                            + dn.getTentaikhoan() + "\n Mật Khẩu : " + dn.getMatkhau() + "\n Chức năng : " + dn.getChucnang());
                                } else {
                                 JOptionPane.showMessageDialog(null, "Lỗi thêm tài khoản CSDL Cập nhật"  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
                                }

                            }
                        } else {
                            if (DangNhapDao.xoaTaikhoan((String) nv.getMaNhanVien())) {
                                JOptionPane.showMessageDialog(rootPane, "Xóa Tài khoản " + nv.getMaNhanVien());
                            }

                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Lỗi cập nhật "+e  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    @Override
    public void xoa() {
        index = tbl_nhanvien.getSelectedRow();
        if (index < 0) {
              JOptionPane.showMessageDialog(null, "Xin mời chọn vị trí xóa"  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
        } else {
            boolean nv = NhanVienDao.xoaNhanvien(txt_manhanvien2.getText());
            if (nv) {
                model.removeRow(index);
                   JOptionPane.showMessageDialog(null, "Xóa thành công Nhân viên"  , "Thông báo!", JOptionPane.INFORMATION_MESSAGE);

                if (DangNhapDao.xoaTaikhoan(txt_manhanvien2.getText())) {
                   JOptionPane.showMessageDialog(null, "Xóa thành công tài khoản"  , "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                   JOptionPane.showMessageDialog(null, "lỗi xóa nhân viên"  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    @Override
    public void lammoi() {
        txt_diachi.setText("");
        txt_email.setText("");
        txt_hovaten.setText("");
        txt_manhanvien2.setText("");
        txt_manhanvien1.setText("");
        txt_ngaysinh.setText("");
        txt_Luong.setText("");

    }

    @Override
    public void showdetail(int index) {
        Nhanvien nv = NhanVienDao.timkiemNhanVien(tbl_nhanvien.getValueAt(index, 0).toString());
        txt_manhanvien2.setText(tbl_nhanvien.getValueAt(index, 0).toString());
        txt_hovaten.setText(tbl_nhanvien.getValueAt(index, 1).toString());
        String gt = tbl_nhanvien.getValueAt(index, 2).toString();
        if (gt.equals("Nam")) {
            rdo_nam.setSelected(true);
        } else {
            rdo_nu.setSelected(true);
        }
        txt_ngaysinh.setText(tbl_nhanvien.getValueAt(index, 3).toString());
        txt_Luong.setText(tbl_nhanvien.getValueAt(index, 4).toString());
        txt_email.setText(tbl_nhanvien.getValueAt(index, 5).toString());
        txt_diachi.setText(tbl_nhanvien.getValueAt(index, 6).toString());
        cbo_chucvu.setSelectedItem(tbl_nhanvien.getValueAt(index, 7).toString());
        txt_Luong.setText(tbl_nhanvien.getValueAt(index, 8).toString());
       

    }

    @Override
    public boolean checktontai() {
        String timkiem = txt_manhanvien2.getText();

        Nhanvien nv = NhanVienDao.timkiemNhanVien(timkiem);
        if (nv == null) {
               JOptionPane.showMessageDialog(null, "Nhân viên có mã "+txt_manhanvien2.getText()+" không tồn tại"  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
         
            return false;
        }
        return true;
    }

    @Override
    public void timkiemnhanvien() {
        model = (DefaultTableModel) tbl_nhanvien.getModel();
        model.setRowCount(0);
        for (Nhanvien nv : NhanVienDao.search(txt_manhanvien1.getText())) {
            String gt;
            if (nv.getGioitinh()) {
                gt = "Nam";
            } else {
                gt = "Nữ";
            }
            Object a[] = new Object[]{
                nv.getMaNhanVien(), nv.getTenNhanVien(), gt, nv.getNgaySinh(), nv.getSoDienThoai(), nv.getEmail(), nv.getDiaChi(), nv.getChucVu(),nv.getLuong()
            };
            model.addRow(a);

        }
    }

   

    @Override
    public boolean checktaikhoan() {
        Users dn = DangNhapDao.timkiemTaiKhoan(txt_manhanvien2.getText());
        if (dn != null) {
               JOptionPane.showMessageDialog(null, "Nhân viên "+txt_hovaten.getText()+" đã có tài khoản"  , "Thông báo!", JOptionPane.ERROR_MESSAGE);
         
            return false;
        }

        return true;
    }

    @Override
    public String hinhanh() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
